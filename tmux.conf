## Tmux Config

## Set to 256 color terminal by default, this shouldn't mess up anything
#  on an 8 color term but will make a 256 color one look really nice
if '[ "$TERM" = linux ]' 'set -g default-terminal "screen"'
if '[ "$TERM" != linux ]' 'set -g default-terminal "screen-256color"'
#session initialization
#if '! tmux has-session -t mysession' 
new -s mysession -n bash "bash"
neww -n emacs "emacs"
neww -n mc/htop "mc"
splitw -h -t 0 "htop"
selectw -t 0

## Set the prefix to C-t.
unbind C-b
set -g prefix C-t
bind t send-prefix

### Bind appropriate commands similar to screen.
## lockscreen C-X x 
unbind C-X
bind C-X lock-server
unbind x
bind x lock-server

## C-C c, new window
unbind C-C
bind C-C new-window
unbind c
bind c new-window

## C-D detach session
unbind C-D
bind C-D detach

## * , list clients
unbind *
bind * list-clients

## C-N n , next window
unbind C-N
bind C-N next-window
unbind n
bind n next-window

## A, title
unbind A
bind A command-prompt "rename-window %%"

## C-A, last window
unbind C-A
bind C-A last-window

## C-P p, previous window
unbind C-P
bind C-P previous-window
unbind p
bind p previous-window

## C-W w , list-windows
unbind C-W
bind C-W list-windows
unbind w
bind w list-windows

## \ , kill-server (confirm before)
unbind '\'
bind '\' confirm-before "kill-server"

## K k, kill pane
unbind K
bind K kill-pane
unbind k
bind k confirm-before "kill-pane"

## Q q, kill window
unbind Q
bind Q kill-window
unbind q
bind q confirm-before "kill-window"

## C-L l, redisplay
unbind C-L
bind C-L refresh-client
unbind l
bind l refresh-client

## Tab, Rotate panes
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

## ", list windows
unbind '"'
bind '"' choose-window

## a, time
unbind a
bind a clock-mode

## v, split window vertically
unbind v
bind v split-window -v
## h, split windown horizonally
unbind h
bind h split-window -h

## toggle last window like screen
# bind-key C-a last-window

## toggle statusbar
# bind-key b set-option status

## ctrl+left/right, cycles thru windows 
bind-key -n C-right next
bind-key -n C-left prev

## urxvt tab like window switching, not really too useful
#bind S-down new-window
#bind S-left prev
#bind S-up prev
#bind S-right next
#bind S-down next
#bind C-S-left swap-window -t -1
#bind C-S-right swap-window -t +1
## i3-like pane movement (no prefix key) (why doesn't this work?)
bind-key -n      A-Up select-pane -U
bind-key -n      A-Down select-pane -D
bind-key -n      A-Left select-pane -L
bind-key -n      A-Right select-pane -R

## e, emacs
unbind e
bind-key e new-window "emacs"
## C-e, emacs w/o any extra load files
unbind C-e
bind-key C-e new-window "emacs -Q -nw"
## Y, reload config
unbind Y
bind Y source-file /home/tucker/.tmux.conf

## run command in new pane
unbind d
bind d command-prompt "split-window -h 'exec %%'"

## open a man page in new window (obsoleted by above)
# bind / command-prompt "split-window 'exec man %%'"

## quick view of processes
# bind '~' split-window "exec htop"

## scrollback buffer n lines
set -g history-limit 10000

## listen for activity on all windows
# set -g bell-action any

## on-screen time for display-panes in ms
# set -g display-panes-time 2000

## enable wm window titles
# set -g set-titles on

## wm window title string (uses statusbar variables)
# set -g set-titles-string "tmux.#I.#W"

## session initialization
#new -s mysession -n 0 bash
#neww -n 1 emacs
#neww -n 2 mc
#splitw -h -t 0 htop
#selectw -t 0

# # statusbar --------------------------------------------------------------

# set -g display-time 2000

# # default statusbar colors
# set -g status-fg white
# set -g status-bg default
# set -g status-attr default

# # default window title colors
# set-window-option -g window-status-fg cyan
# set-window-option -g window-status-bg default
# set-window-option -g window-status-attr dim

# # active window title colors
# set-window-option -g window-status-current-fg white
# set-window-option -g window-status-current-bg default
# set-window-option -g window-status-current-attr bright

# # command/message line colors
# set -g message-fg white
# set -g message-bg black
# set -g message-attr bright

# # center align the window list
# set -g status-justify centre

# # show some useful stats but only when tmux is started 
# # outside of Xorg
 set -g status-right ""
 set -g status-left ""
 if '[ -z "$DISPLAY" ]' 'set -g status-left "[#[fg=green] #H #[default]]"'
 if '[ -z "$DISPLAY" ]' 'set -g status-right "[ #[fg=red]#(cat /proc/loadavg | cut -d \" \" -f 1,2,3)#[default] ][ #[fg=blue]%a %Y-%m-%d %H:%M #[default]]"'
 if '[ -z "$DISPLAY" ]' 'set -g status-right-length 50'

## Default Keymap
# C-b         Send the prefix key (C-b) through to the application.
# C-o         Rotate the panes in the current window forwards.
# C-z         Suspend the tmux client.
# !           Break the current pane out of the window.
# "           Split the current pane into two, top and bottom.
# #           List all paste buffers.
# $           Rename the current session.
# %           Split the current pane into two, left and right.
# &           Kill the current window.
# '           Prompt for a window index to select.
# ,           Rename the current window.
# -           Delete the most recently copied buffer of text.
# .           Prompt for an index to move the current window.
# 0 to 9      Select windows 0 to 9.
# :           Enter the tmux command prompt.
# ;           Move to the previously active pane.
# =           Choose which buffer to paste interactively from a list.
# ?           List all key bindings.
# D           Choose a client to detach.
# [           Enter copy mode to copy text or view the history.
# ]           Paste the most recently copied buffer of text.
# c           Create a new window.
# d           Detach the current client.
# f           Prompt to search for text in open windows.
# i           Display some information about the current window.
# l           Move to the previously selected window.
# n           Change to the next window.
# o           Select the next pane in the current window.
# p           Change to the previous window.
# q           Briefly display pane indexes.
# r           Force redraw of the attached client.
# s           Select a new session for the attached client interac‐
#             tively.
# L           Switch the attached client back to the last session.
# t           Show the time.
# w           Choose the current window interactively.
# x           Kill the current pane.
# {           Swap the current pane with the previous pane.
# f           Prompt to search for text in open windows.
# i           Display some information about the current window.
# l           Move to the previously selected window.
# n           Change to the next wndow.
# o           Select the next pane in the current window.
# p           Change to the previous window.
# q           Briefly display pane indexes.
# r           Force redraw of the attached client.
# s           Select a new session for the attached client interac‐
#             tively.
# L           Switch the attached client back to the last session.
# t           Show the time.
# w           Choose the current window interactively.
# x           Kill the current pane.
# {           Swap the current pane with the previous pane.
# }           Swap the current pane with the next pane.
# ~           Show previous messages from tmux, if any.
# Page Up     Enter copy mode and scroll one page up.
# Up, Down
# Left, Right
#             Change to the pane above, below, to the left, or to the
#             right of the current pane.
# M-1 to M-5  Arrange panes in one of the five preset layouts: even-
#             horizontal, even-vertical, main-horizontal, main-verti‐
#             cal, or tiled.
# M-n         Move to the next window with a bell or activity marker.
# M-o         Rotate the panes in the current window backwards.
# M-p         Move to the previous window with a bell or activity
#             marker.
# C-Up, C-Down
# C-Left, C-Right
#             Resize the current pane in steps of one cell.
# M-Up, M-Down
# M-Left, M-Right
#             Resize the current pane in steps of five cells.


## Current(needs updating) Keymap
# bind-key          . command-prompt "move-window -t '%%'"
# bind-key          0 select-window -t :0
# bind-key          1 select-window -t :1
# bind-key          2 select-window -t :2
# bind-key          3 select-window -t :3
# bind-key          4 select-window -t :4
# bind-key          5 select-window -t :5
# bind-key          6 select-window -t :6
# bind-key          7 select-window -t :7
# bind-key          8 select-window -t :8
# bind-key          9 select-window -t :9
# bind-key          : command-prompt
# bind-key          ; last-pane
# bind-key          = choose-buffer
# bind-key          ? list-keys
# bind-key          A command-prompt "rename-window %%"
# bind-key          D choose-client
# bind-key          K confirm-before kill-window
# bind-key          L switch-client -l
# bind-key          [ copy-mode
# bind-key          \ confirm-before kill-server
# bind-key          ] paste-buffer
# bind-key          c new-window
# bind-key          d detach-client
# bind-key          f command-prompt "find-window '%%'"
# bind-key          i display-message
# bind-key          k confirm-before kill-window
# bind-key          l refresh-client
# bind-key          n next-window
# bind-key          o select-pane -t :.+
# bind-key          p previous-window
# bind-key          q display-panes
# bind-key          r refresh-client
# bind-key          s choose-tree
# bind-key          t send-prefix
# bind-key          w list-windows
# bind-key          x lock-server
# bind-key          z resize-pane -Z
# bind-key          { swap-pane -U
# bind-key          | split-window
# bind-key          } swap-pane -D
# bind-key          ~ show-messages
# bind-key     BSpace previous-window
# bind-key      PPage copy-mode -u
# bind-key       BTab select-pane -t :.-
# bind-key -r      Up select-pane -U
# bind-key -r    Down select-pane -D
# bind-key -r    Left select-pane -L
# bind-key -r   Right select-pane -R
# bind-key        M-1 select-layout even-horizontal
# bind-key        M-2 select-layout even-vertical
# bind-key        M-3 select-layout main-horizontal
# bind-key        M-4 select-layout main-vertical
# bind-key        M-5 select-layout tiled
# bind-key        M-n next-window -a
# bind-key        M-o rotate-window -D
# bind-key        M-p previous-window -a
# bind-key -r    M-Up resize-pane -U 5
# bind-key -r  M-Down resize-pane -D 5
# bind-key -r  M-Left resize-pane -L 5
# bind-key -r M-Right resize-pane -R 5
# bind-key -r    C-Up resize-pane -U
# bind-key -r  C-Down resize-pane -D
# bind-key -r  C-Left resize-pane -L
# bind-key -n  C-Left previous-window
# bind-key -r C-Right resize-pane -R
# bind-key -n C-Right next-window


## Default Options
# assume-paste-time 1                                                      
# base-index 0
# bell-action any
# bell-on-alert off
# default-command ""
# default-path ""
# default-shell "/bin/bash"
# default-terminal "screen"
## don't keey unused sessions running
set -g destroy-unattached on
# detach-on-destroy on
# display-panes-active-colour red
# display-panes-colour blue
# display-panes-time 1000
# display-time 750
# history-limit 2000
# lock-after-time 0
# lock-command "lock -np"
# lock-server on
# message-attr none
# message-bg yellow
# message-command-attr none
# message-command-bg black
# message-command-fg yellow
# message-fg black
# message-limit 20
# mouse-resize-pane off
# mouse-select-pane off
# mouse-select-window off
# mouse-utf8 on
# pane-active-border-bg default
# pane-active-border-fg green
# pane-border-bg default
# pane-border-fg default
# prefix C-t
# prefix2 none
## renumber windows when one is killed
# ie if windows are 1 2 3 and 2 is killed show 1 2, not 1 3
set -g renumber-windows on
# repeat-time 500
# set-remain-on-exit off
# set-titles off
# set-titles-string "#S:#I:#W - "#T""
# status on
# status-bg green
# status-fg black
# status-interval 15
# status-justify left
# status-keys emacs
# status-left "[#[fg=green] #H #[default]]"
# status-left-attr none
# status-left-bg default
# status-left-fg default
# status-left-length 10
# status-position bottom
# status-right "[ #[fg=magenta]#(cat /proc/loadavg | cut -d " " -f 1,2,3)#[defaul"
# status-right-attr none
# status-right-bg default
# status-right-fg default
# status-right-length 50
# status-utf8 on
# terminal-overrides "*88col*:colors=88,*256col*:colors=256,xterm*:XT:Ms=\E]52;%p"
# update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECT"
# visual-activity off
# visual-bell off
# visual-content off
# visual-silence off
# word-separators " -_@"


## Copy Mode Keybindings
bind-key -t emacs-copy C-p cursor-up
bind-key -t emacs-copy C-n cursor-down
bind-key -t emacs-copy C-b cursor-left
bind-key -t emacs-copy C-f cursor-right
## Defaults
# bind-key -t emacs-copy C-Space begin-selection
# bind-key -t emacs-copy     C-a start-of-line
# bind-key -t emacs-copy     C-b cursor-left
# bind-key -t emacs-copy     C-c cancel
# bind-key -t emacs-copy     C-e end-of-line
# bind-key -t emacs-copy     C-f cursor-right
# bind-key -t emacs-copy     C-g clear-selection
# bind-key -t emacs-copy     C-k copy-end-of-line
# bind-key -t emacs-copy     C-n cursor-down
# bind-key -t emacs-copy     C-p cursor-up
# bind-key -t emacs-copy     C-r search-backward
# bind-key -t emacs-copy     C-s search-forward
# bind-key -t emacs-copy     C-v page-down
# bind-key -t emacs-copy     C-w copy-selection
# bind-key -t emacs-copy  Escape cancel
# bind-key -t emacs-copy   Space page-down
# bind-key -t emacs-copy       , jump-reverse
# bind-key -t emacs-copy       ; jump-again
# bind-key -t emacs-copy       F jump-backward
# bind-key -t emacs-copy       N search-reverse
# bind-key -t emacs-copy       R rectangle-toggle
# bind-key -t emacs-copy       T jump-to-backward
# bind-key -t emacs-copy       f jump-forward
# bind-key -t emacs-copy       g goto-line
# bind-key -t emacs-copy       n search-again
# bind-key -t emacs-copy       q cancel
# bind-key -t emacs-copy       t jump-to-forward
# bind-key -t emacs-copy   NPage page-down
# bind-key -t emacs-copy   PPage page-up
# bind-key -t emacs-copy      Up cursor-up
# bind-key -t emacs-copy    Down cursor-down
# bind-key -t emacs-copy    Left cursor-left
# bind-key -t emacs-copy   Right cursor-right
# bind-key -t emacs-copy     M-1 start-number-prefix
# bind-key -t emacs-copy     M-2 start-number-prefix
# bind-key -t emacs-copy     M-3 start-number-prefix
# bind-key -t emacs-copy     M-4 start-number-prefix
# bind-key -t emacs-copy     M-5 start-number-prefix
# bind-key -t emacs-copy     M-6 start-number-prefix
# bind-key -t emacs-copy     M-7 start-number-prefix
# bind-key -t emacs-copy     M-8 start-number-prefix
# bind-key -t emacs-copy     M-9 start-number-prefix
# bind-key -t emacs-copy     M-< history-top
# bind-key -t emacs-copy     M-> history-bottom
# bind-key -t emacs-copy     M-R top-line
# bind-key -t emacs-copy     M-b previous-word
# bind-key -t emacs-copy     M-f next-word-end
# bind-key -t emacs-copy     M-m back-to-indentation
# bind-key -t emacs-copy     M-r middle-line
# bind-key -t emacs-copy     M-v page-up
# bind-key -t emacs-copy     M-w copy-selection
# bind-key -t emacs-copy    M-Up halfpage-up
# bind-key -t emacs-copy  M-Down halfpage-down
# bind-key -t emacs-copy    C-Up scroll-up
# bind-key -t emacs-copy  C-Down scroll-down