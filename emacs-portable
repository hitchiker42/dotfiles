;;establish paths and init files
(setq user-init-file
      (expand-file-name "init.el"
			(expand-file-name ".emacs.d" "~")))
(setq custom-file
      (expand-file-name "custom.el"
			(expand-file-name ".emacs.d" "~")))
(add-to-list 'load-path "/home/tucker/.elisp")
(add-to-list 'load-path "/home/tucker/.emacs.d/my-elisp")
;;not sure what this is 
(require 'compile)
(add-to-list
 'compilation-error-regexp-alist
 '("^\\([^ \n]+\\)(\\([0-9]+\\)): \\(?:error\\|.\\|warnin\\(g\\)\\|remar\\(k\\)\\)"
   1 2 nil (3 . 4)))
;;load files and init packages
(require 'package)
;;(load-file user-init-file)
(load-file custom-file)
(package-initialize)
;;load slime with quicklisp
(load (expand-file-name "~/quicklisp/slime-helper.el"))
(setq inferior-lisp-program "/home/tucker/usr/bin/sbcl")
;;Load packages
(require 'lein)
(require 'clojure-mode)
(require 'go-mode)
(require 'shen-mode)
(require 'coffee-mode)
(require 'top-mode)
(require 'auto-complete)
(require 'rainbow-delimiters)
(require 'auto-complete)
(require 'slime)
(require 'd-mode)
(require 'fold-this)
(require 'quack)
(require 'auctex-autoloads)
(require 'geiser)
(require 'w3m)
(require 'wind-swap)
(require 'haskell-mode)
(require 'shen-mode)
(require 'go-mode)

;;setup modes and default keybindings
(slime-setup '(slime-fancy slime-sbcl-exts slime-js))
(global-set-key "\C-cs" 'slime-selector)
(global-rainbow-delimiters-mode)
;;(global-whitespace-mode)
(global-auto-complete-mode)
(windmove-default-keybindings)
(global-set-key (kbd "C-c r s") 'replace-string)
(global-set-key (kbd "C-c r") 'replace-regexp)
(defalias 'yes-or-no-p 'y-or-n-p)
(setq py-python-command "/usr/bin/python3.3")
(setq py-shell-name "/usr/local/bin/ipython3")
(setq py-load-pymacs-p t)
(add-hook 'js2-mode-hook
          (lambda ()
            (slime-js-minor-mode 1)))
;;; Backup files
;; Put them in one nice place if possible
(if (file-directory-p "~/.backup")
    (setq backup-directory-alist '(("." . "~/.backup")))
  (message "Directory does not exist: ~/.backup"))
(setq backup-by-copying t    ; Don't delink hardlinks
      delete-old-versions t  ; Clean up the backups
      version-control t      ; Use version numbers on backups,
      kept-new-versions 3    ; keep some new versions
      kept-old-versions 2)   ; and some old ones
;;old junk, keep just in case
;(require 'auto-complete-config)
;(ac-config-default)
;;if slime doesn't work uncomment next line
;;(add-to-list 'load-path "/home/tucker/Repo/emacs/slime")
;;(add-to-list 'load-path "/home/tucker/Repo/emacs/slime/contrib")
